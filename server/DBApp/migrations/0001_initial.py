# Generated by Django 5.1.7 on 2025-05-12 17:01

import DBApp.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_username', models.CharField(max_length=255, unique=True)),
                ('admin_password', models.CharField(max_length=255)),
                ('admin_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('admin_name', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=255)),
                ('class_semester', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'class',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('parent_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_firstname', models.CharField(max_length=255)),
                ('parent_lastname', models.CharField(max_length=255)),
                ('parent_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('parent_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_address', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_relationship_to_student', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(blank=True, max_length=255, null=True)),
                ('student_dob', models.DateTimeField(blank=True, null=True)),
                ('student_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('student_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('student_graduating_class', models.IntegerField(blank=True, null=True)),
                ('student_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('student_specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('student_is_active', models.BooleanField(blank=True, null=True)),
                ('student_school', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.AutoField(primary_key=True, serialize=False)),
                ('teacher_name', models.CharField(max_length=255)),
                ('teacher_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('teacher_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('teacher_classes', models.CharField(blank=True, max_length=255, null=True)),
                ('teacher_profession', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.AutoField(primary_key=True, serialize=False)),
                ('text_content', models.TextField(blank=True, max_length=10000, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=DBApp.models.assignment_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('day_uploaded', models.DateField(auto_now_add=True)),
                ('deadline', models.DateField()),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.class')),
            ],
            options={
                'db_table': 'assignment',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateField(blank=True, null=True)),
                ('withdrawal_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=5, null=True)),
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.student')),
            ],
            options={
                'db_table': 'enrollment',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.teacher'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.class')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.student')),
            ],
            options={
                'db_table': 'score',
                'unique_together': {('student', 'class_field')},
            },
        ),
        migrations.CreateModel(
            name='Classstudent',
            fields=[
                ('class_field', models.OneToOneField(db_column='class_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='DBApp.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.student')),
            ],
            options={
                'db_table': 'classstudent',
                'unique_together': {('class_field', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentparent',
            fields=[
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='DBApp.student')),
                ('relationship_to_student', models.CharField(blank=True, max_length=50, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.parent')),
            ],
            options={
                'db_table': 'studentparent',
                'unique_together': {('student', 'parent')},
            },
        ),
    ]
