# Generated by Django 5.1.7 on 2025-05-18 15:18

import DBApp.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Login', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_username', models.CharField(max_length=255, unique=True)),
                ('admin_password', models.CharField(max_length=255)),
                ('admin_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('admin_name', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=255)),
                ('class_semester', models.IntegerField(blank=True, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'db_table': 'class',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('course_semester', models.IntegerField(blank=True, null=True)),
                ('course_midterm_coeff', models.FloatField(default=0.4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('course_final_coeff', models.FloatField(default=0.6, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('parent_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_firstname', models.CharField(max_length=255)),
                ('parent_lastname', models.CharField(max_length=255)),
                ('parent_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('parent_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_address', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_relationship_to_student', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('isActive', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'semester',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(blank=True, max_length=255, null=True)),
                ('student_dob', models.DateTimeField(blank=True, null=True)),
                ('student_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('student_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('student_graduating_class', models.IntegerField(blank=True, null=True)),
                ('student_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('student_specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('student_is_active', models.BooleanField(blank=True, null=True)),
                ('student_school', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.AutoField(primary_key=True, serialize=False)),
                ('teacher_name', models.CharField(max_length=255)),
                ('teacher_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('teacher_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('teacher_profession', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.AutoField(primary_key=True, serialize=False)),
                ('text_content', models.TextField(blank=True, max_length=10000, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=DBApp.models.assignment_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('day_uploaded', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.class')),
            ],
            options={
                'db_table': 'assignment',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='DBApp.course'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_of_bug', models.TextField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, max_length=10000, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Resolved', 'Resolved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('sender', models.ForeignKey(blank=True, db_column='sender_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='Login.userlogin')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('withdrawal_date', models.DateTimeField(blank=True, null=True)),
                ('grade', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('midterm', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('final', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.student')),
            ],
            options={
                'db_table': 'enrollment',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='DBApp.teacher'),
        ),
        migrations.CreateModel(
            name='Assignmentscore',
            fields=[
                ('connect_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('assignment', models.ForeignKey(db_column='assignment_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.assignment')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.student')),
            ],
            options={
                'db_table': 'assignment_score',
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentparent',
            fields=[
                ('connect_id', models.AutoField(primary_key=True, serialize=False)),
                ('relationship_to_student', models.CharField(blank=True, max_length=50, null=True)),
                ('parent', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.parent')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.student')),
            ],
            options={
                'db_table': 'studentparent',
                'unique_together': {('student', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='CourseTeacher',
            fields=[
                ('connect_id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.course')),
                ('teacher', models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.teacher')),
            ],
            options={
                'db_table': 'course_teacher',
                'unique_together': {('course', 'teacher')},
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('work_id', models.AutoField(primary_key=True, serialize=False)),
                ('text_content', models.TextField(blank=True, max_length=10000, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=DBApp.models.work_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('day_uploaded', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('assignment', models.ForeignKey(db_column='assignment_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.assignment')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='DBApp.student')),
            ],
            options={
                'db_table': 'work',
                'unique_together': {('assignment', 'student')},
            },
        ),
    ]
